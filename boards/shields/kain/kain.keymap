/*
 * Copyright (C) Joseph Kain.
 * Generate with keymap-editor.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/ {
    &caps_word {
        mods = <(MOD_LSHFT | MOD_RSHFT)>;
    };

    behaviors {
    caps: caps {
        compatible = "zmk,behavior-mod-morph";
        label = "caps";
        #binding-cells = <0>;
        bindings = <&caps_word>, <&kp CAPS>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mo 5       &kp Q  &kp W  &kp E  &kp R      &kp T         &kp Y      &kp U        &kp I      &kp O    &kp P     &mo 6
&kp ESCAPE  &kp A  &kp S  &kp D  &kp F      &kp G         &kp H      &kp J        &kp K      &kp L    &kp SQT   &kp P
&none       &kp Z  &kp X  &kp C  &kp V      &kp B         &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH  &none
                          &mo 1  &kp SPACE  &kp TAB       &lt 4 RET  &lt 3 BSPC   &mo 2
            >;
        };

        LeftMods {
            bindings = <
&trans  &trans      &trans      &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans
                    &trans      &trans       &trans         &trans  &trans  &trans
            >;
        };

        RightMods {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans        &trans       &trans      &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &mt RSHFT J   &mt RCTRL K  &mt RALT L  &mt RGUI SQT  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans        &trans       &trans      &trans        &trans
                        &trans  &trans  &trans            &trans  &trans        &trans
            >;
        };

        Nav {
            bindings = <
&none    &kp PG_UP  &kp END    &kp UP     &kp HOME   &kp INS      &none   &none      &none      &none     &bootloader  &none
&kp ESC  &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &caps        &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI     &none
&none    &none      &none      &none      &none      &none        &none   &none      &none      &none     &none        &none
                               &none      &kp SPACE  &kp TAB      &kp RET &none      &none
            >;
        };

        Number {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT       &none   &none      &none      &none     &bootloader  &none
&none  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL      &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI     &none
&none  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH       &none   &none      &none      &none     &none        &none
                          &kp DOT  &kp N0  &kp MINUS      &trans  &none      &none
            >;
        };

        Bluetooth {
            bindings = <
&trans  &bootloader  &none  &none  &none  &none           &none  &none         &none         &none         &none         &none
&none   &none        &none  &none  &none  &none           &none  &none         &none         &none         &none         &none
&none   &none        &none  &none  &none  &none           &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
                            &none  &none  &none           &none  &none         &none
            >;
        };

        Func {
            bindings = <
&none  &kp F12  &kp F7  &kp F8  &kp F9     &none          &none  &none      &none      &none     &bootloader  &trans
&none  &kp F11  &kp F4  &kp F5  &kp F6     &none          &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI     &none
&none  &kp F10  &kp F1  &kp F2  &kp F3     &none          &none  &none      &none      &none     &none        &none
                        &none   &kp SPACE  &kp TAB        &none  &none      &none
            >;
        };
    };
};
